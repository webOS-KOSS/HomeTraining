"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Handlers = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Handlers = /*#__PURE__*/function () {
  function Handlers(_handlers) {
    var _this = this;

    _classCallCheck(this, Handlers);

    this.props = {};
    this.context = {};
    this._handlers = {};

    if (_handlers) {
      Object.keys(_handlers).forEach(function (fn) {
        _this._handlers[fn] = function (ev) {
          return _handlers[fn](ev, _this.props, _this.context);
        };

        _this._handlers[fn].displayName = fn;
      });
    }
  }

  _createClass(Handlers, [{
    key: "handlers",
    get: function get() {
      return this._handlers;
    }
  }, {
    key: "setContext",
    value: function setContext() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.props = props;
      this.context = context;
    }
  }]);

  return Handlers;
}();

exports.Handlers = Handlers;
var _default = Handlers;
exports["default"] = _default;