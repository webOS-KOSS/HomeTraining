"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapIlibCallback = exports["default"] = void 0;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var invoke = function invoke(fn, options, callback) {
  var _onLoad = options.onLoad;
  fn(_objectSpread(_objectSpread({}, options), {}, {
    onLoad: function onLoad(result) {
      callback(result);
      if (_onLoad) _onLoad(result);
    }
  }));
};

var wrapIlibCallback = function wrapIlibCallback(fn) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$sync = options.sync,
      sync = _options$sync === void 0 ? false : _options$sync;

  if (!fn) {
    return sync ? null : Promise.resolve(null);
  }

  if (sync) {
    var value = null;
    invoke(fn, options, function (v) {
      return value = v;
    });
    return value;
  }

  return new Promise(function (resolve) {
    return invoke(fn, options, resolve);
  });
};

exports.wrapIlibCallback = wrapIlibCallback;
var _default = wrapIlibCallback;
exports["default"] = _default;