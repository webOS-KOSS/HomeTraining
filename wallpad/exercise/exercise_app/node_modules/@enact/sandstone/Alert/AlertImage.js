"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Image = _interopRequireDefault(require("../Image"));

var _AlertImageModule = _interopRequireDefault(require("./AlertImage.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["css", "src"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * An image for use in an Alert.
 *
 * @class
 * @memberof sandstone/Alert
 * @ui
 * @public
 */
var AlertImage = (0, _kind["default"])({
  name: 'AlertImage',
  propTypes:
  /** @lends sandstone/Alert.AlertImage */
  {
    /**
     * String value or Object of values used to determine which image will appear for
     * a specific component size.
     *
     * @type {String|Object}
     * @required
     * @public
     */
    src: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]).isRequired,

    /**
     * Type of image to appear in the alert component. There are two types:
     *
     * * `icon` - A small square sized image type
     * * `thumbnail` - A common image type
     *
     * @type {('icon'|'thumbnail')}
     * @required
     * @public
     */
    type: _propTypes["default"].oneOf(['icon', 'thumbnail']).isRequired,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `alertImage` - The root class name
     *
     * @type {Object}
     * @private
     */
    css: _propTypes["default"].object
  },
  styles: {
    className: 'alertImage',
    css: _AlertImageModule["default"],
    publicClassNames: ['alertImage', 'icon', 'thumbnail']
  },
  computed: {
    className: function className(_ref) {
      var type = _ref.type,
          styler = _ref.styler;
      return styler.append(type);
    }
  },
  render: function render(_ref2) {
    var css = _ref2.css,
        src = _ref2.src,
        rest = _objectWithoutProperties(_ref2, _excluded);

    delete rest.type;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image["default"], _objectSpread(_objectSpread({}, rest), {}, {
      src: src,
      css: css
    }));
  }
});
var _default = AlertImage;
exports["default"] = _default;