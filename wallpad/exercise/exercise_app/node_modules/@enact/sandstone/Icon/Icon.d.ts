// Type definitions for sandstone/Icon

import { IconProps as ui_Icon_IconProps } from "@enact/ui/Icon";
import * as React from "react";
import { SkinnableProps as sandstone_Skinnable_SkinnableProps } from "@enact/sandstone/Skinnable";

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

export interface IconBaseProps extends ui_Icon_IconProps {
  /**
   * The icon content.
   */
  children?: string | object;
  /**
 * Customizes the component by mapping the supplied collection of CSS class names to the
corresponding internal elements and states of this component.
 * 
 * The following classes are supported:
 * *  `icon`  - The root component class
 */
  css?: object;
  /**
   * Flips the icon
   *
   * When  `'auto'`  and  `rtl` , the icon is flipped horizontally.
   */
  flip?: "auto" | "both" | "horizontal" | "vertical";
  /**
   * Indicates the content's text direction is right-to-left.
   *
   * This is set automatically when using   .
   */
  rtl?: boolean;
  /**
 * The size of the icon.
 * 
 * A collection of preset sizes is available in addition to a numeric size option.
A number represents the design-time pixel dimensions of the icon. The final value will
automatically adapt to the screen resolutions, as defined in the  `screenTypes`  file of
this theme.
 */
  size?: "large" | "medium" | "small" | "tiny" | number;
}
/**
 * Renders a sandstone-styled icon without any behavior.
 */

export class IconBase extends React.Component<
  Merge<React.HTMLProps<HTMLElement>, IconBaseProps>
> {}

/**
 * An object whose keys can be used as the child of an [Icon]   component.
 * 
 * List of Icons:
 * ```
plus
minus
arrowhookleft
arrowhookright
ellipsis
check
triangleup
triangleright
triangledown
triangleleft
arrowupdown
arrowup
arrowupwhite
arrowuphollow
backspace
space
trianglerightwhite
triangleleftwhite
trianglerighthollow
trianglelefthollow
heart
hearthollow
record
circle
stop
square
play
pause
forward
backward
pauseforward
pausebackward
pausejumpforward
pausejumpbackward
jumpforward
jumpbackward
skip
list
arrowlargedown
arrowlargeup
arrowlargeleft
arrowlargeright
arrowsmallup
arrowsmalldown
arrowsmallleft
arrowsmallright
closex
search
chup
chdown
exitfullscreen
fullscreen
trash
star
starhalf
starhollow
gear
plug
lock
music
view360
info
verticalellipsis
arrowcurveright
picture
home
liverecord
liveplay
trashlock
movecursor
repeatone
repeatall
repeatnone
zoomin
zoomout
download
shuffle
shuffleon
notification
voice
soundmute
stargroup
checker
transponder
selected
bgm
bgmoff
playcircle
pausecircle
lockcircle
unlockcircle
powercircle
wifi1
wifi2
wifi3
wifi4
wifilock1
wifilock2
wifilock3
wifilock4
dashboard1
dashboard2
dashboard3
language
rotate
lyrics
screenpower
miniplayer
nowplaying
playspeed
folder
folderupper
support
soundout
mobile
keyboard
mouse
controller
btspeaker
headset
dns
speaker
speakersurround
speakercenter
speakerbass
router
demosync
browser
sound
wisa
demooptions
newfeature
youtube
ostsearch
shopping
bookmark
eject
power
timer
network
edit
aspectratio
link
light
pointersize
pointerspeed
soundmode
contrast
picturemode
basketball
soccer
baseball
golf
football
hockey
volleyball
cricket
heartadd
heartlist
refresh
help
share
files
quickstart
scheduler
recording
guide
channel
oneminplay
oneminrecord
fifteenforward
fifteenbackward
liveplayoff
liveplayon
popupscale
arrowrightskip
closedcaption
subtitle
subtitlekr
subtitlecn
samples
googledrive
googlephotos
dlna
replay
usb
ftp
profile
profilecheck
mediaserver
wallpaper
spanner
bluetooth
moodmode
changepassword
r2rappcall
```
 */
export declare const iconList: object;

export interface IconDecoratorProps
  extends sandstone_Skinnable_SkinnableProps {}
export function IconDecorator<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & IconDecoratorProps>;

export interface IconProps extends Merge<IconBaseProps, IconDecoratorProps> {}
/**
 * A Sandstone-styled icon.
 */

export class Icon extends React.Component<
  Merge<React.HTMLProps<HTMLElement>, IconProps>
> {}

export default Icon;
