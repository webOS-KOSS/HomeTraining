"use strict";

var _FloatingLayer = require("@enact/ui/FloatingLayer");

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _Popup = require("../Popup");

var _jsxRuntime = require("react/jsx-runtime");

var FloatingLayerController = (0, _FloatingLayer.FloatingLayerDecorator)('div');
describe('Popup specs', function () {
  test('should be rendered opened if open is set to true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.getByText('popup');

    expect(popup).toBeInTheDocument();
  });
  test('should not be rendered if open is set to false', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.queryByText('popup');

    expect(popup).toBeNull();
  });
  test('should set role to alert by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.getByRole('alert');

    expect(popup).toBeInTheDocument();
  });
  test('should allow role to be overridden', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        open: true,
        role: "dialog",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.getByRole('dialog');

    expect(popup).toBeInTheDocument();
  });
  test('should set "data-webos-voice-exclusive" when popup is open', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.getByRole('alert');

    expect(popup).toHaveAttribute('data-webos-voice-exclusive');
  });
  test('should set "data-webos-voice-disabled" when voice control is disabled', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        "data-webos-voice-disabled": true,
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    var popup = _react.screen.getByRole('alert');

    expect(popup).toHaveAttribute('data-webos-voice-disabled');
  });
  test('should fire onClose event with type and detail info when Popup is closed', function () {
    var handleClose = jest.fn();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
        onClose: handleClose,
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "popup"
        })
      })
    }));

    _react.fireEvent.keyUp(_react.screen.getByText('popup'), {
      keyCode: 27
    });

    var expectedType = {
      type: 'onClose',
      detail: {
        inputType: 'key'
      }
    };
    var actual = handleClose.mock.calls.length && handleClose.mock.calls[0][0];
    expect(actual).toMatchObject(expectedType);
  });
  describe('with position bottom', function () {
    test('should have bottom class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "bottom",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('bottom');
    });
    test('should have bottom class in popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "bottom",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('bottom');
    });
  });
  describe('with position left', function () {
    test('should have left class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "left",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('left');
    });
    test('should have left class in popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "left",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('left');
    });
  });
  describe('with position right', function () {
    test('should have right class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "right",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('right');
    });
    test('should have right class in popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "right",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('right');
    });
  });
  describe('with position top', function () {
    test('should have top class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "top",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('top');
    });
    test('should have top class popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "top",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('top');
    });
  });
  describe('with position center', function () {
    test('should have center class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('center');
    });
    test('should have center class popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('center');
    });
  });
  describe('with position fullscreen', function () {
    test('should have fullscreen class', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "fullscreen",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var popup = _react.screen.getByRole('alert');

      expect(popup).toHaveClass('fullscreen');
    });
    test('should have fullscreen class popup transition container', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "fullscreen",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(transitionContainer).toHaveClass('fullscreen');
    });
  });
  describe('with position changes dynamically - [GT-28270]', function () {
    test('should not have top class when position change from top to any other position', function () {
      var firstPosition = 'top';

      var _render = (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: firstPosition,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      })),
          rerender = _render.rerender;

      var popup = _react.screen.getByRole('alert');

      var transitionContainer = _react.screen.getByRole('alert').parentElement.parentElement;

      expect(popup).toHaveClass(firstPosition);
      expect(transitionContainer).toHaveClass(firstPosition);
      expect(popup).not.toHaveClass('fullscreen');
      expect(transitionContainer).not.toHaveClass('fullscreen');
      expect(popup).not.toHaveClass('center');
      expect(transitionContainer).not.toHaveClass('center');
      expect(popup).not.toHaveClass('bottom');
      expect(transitionContainer).not.toHaveClass('bottom');
      expect(popup).not.toHaveClass('right');
      expect(transitionContainer).not.toHaveClass('right');
      expect(popup).not.toHaveClass('left');
      expect(transitionContainer).not.toHaveClass('left');
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "fullscreen",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));
      expect(popup).not.toHaveClass(firstPosition);
      expect(transitionContainer).not.toHaveClass(firstPosition);
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));
      expect(popup).not.toHaveClass(firstPosition);
      expect(transitionContainer).not.toHaveClass(firstPosition);
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "bottom",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));
      expect(popup).not.toHaveClass(firstPosition);
      expect(transitionContainer).not.toHaveClass(firstPosition);
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "left",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));
      expect(popup).not.toHaveClass(firstPosition);
      expect(transitionContainer).not.toHaveClass(firstPosition);
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Popup.Popup, {
          open: true,
          position: "right",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: "popup"
          })
        })
      }));
      expect(popup).not.toHaveClass(firstPosition);
      expect(transitionContainer).not.toHaveClass(firstPosition);
    });
  });
});