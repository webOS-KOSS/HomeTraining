"use strict";

var _FloatingLayer = require("@enact/ui/FloatingLayer");

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _FixedPopupPanels = _interopRequireDefault(require("../FixedPopupPanels"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var FloatingLayerController = (0, _FloatingLayer.FloatingLayerDecorator)('div');
describe('FixedPopupPanels', function () {
  test('should have the default width when nothing is assigned', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FixedPopupPanels["default"], {
        "data-testid": "panels-id",
        open: true
      })
    }));
    var expected = 'narrow';

    var actual = _react.screen.getByTestId('panels-id').parentElement.parentElement;

    expect(actual).toHaveClass(expected);
  });
  test('should have narrow width applied when width="narrow"', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FixedPopupPanels["default"], {
        "data-testid": "panels-id",
        open: true,
        width: "narrow"
      })
    }));
    var expected = 'narrow';

    var actual = _react.screen.getByTestId('panels-id').parentElement.parentElement;

    expect(actual).toHaveClass(expected);
  });
  test('should have half width applied when width="half"', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FixedPopupPanels["default"], {
        "data-testid": "panels-id",
        open: true,
        width: "half"
      })
    }));
    var expected = 'half';

    var actual = _react.screen.getByTestId('panels-id').parentElement.parentElement;

    expect(actual).toHaveClass(expected);
  });
  test('should correctly assign the fullHeight class', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FixedPopupPanels["default"], {
        "data-testid": "panels-id",
        fullHeight: true,
        open: true
      })
    }));
    var expected = 'fullHeight';

    var actual = _react.screen.getByTestId('panels-id').parentElement.parentElement;

    expect(actual).toHaveClass(expected);
  });
  test('should close on back key', function () {
    var map = {};
    window.addEventListener = jest.fn(function (event, cb) {
      map[event] = cb;
    });
    var handleClose = jest.fn();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FixedPopupPanels["default"], {
        onClose: handleClose,
        open: true
      })
    }));
    map.keyup({
      type: 'keyup',
      currentTarget: window,
      keyCode: 27
    });
    var expectedEvent = {
      type: 'onClose'
    };
    var actualEvent = handleClose.mock.calls.length && handleClose.mock.calls[0][0];
    expect(handleClose).toHaveBeenCalled();
    expect(actualEvent).toMatchObject(expectedEvent);
  });
});