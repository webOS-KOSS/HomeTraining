"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Header", {
  enumerable: true,
  get: function get() {
    return _Header["default"];
  }
});
Object.defineProperty(exports, "HeaderBase", {
  enumerable: true,
  get: function get() {
    return _Header.HeaderBase;
  }
});
Object.defineProperty(exports, "Panel", {
  enumerable: true,
  get: function get() {
    return _Panel["default"];
  }
});
Object.defineProperty(exports, "Panels", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "PanelsBase", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "Routable", {
  enumerable: true,
  get: function get() {
    return _Routable["default"];
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function get() {
    return _Routable.Route;
  }
});
exports["default"] = void 0;

var _Routable = _interopRequireWildcard(require("@enact/ui/Routable"));

var _Header = _interopRequireWildcard(require("./Header"));

var _Panel = _interopRequireDefault(require("./Panel"));

var _Panels = _interopRequireDefault(require("./Panels"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Panels provides a way to manage different screens of an app.
 *
 * @module sandstone/Panels
 * @exports Header
 * @exports Panel
 * @exports Panels
 * @exports PanelsBase
 * @exports Routable
 * @exports Route
 */
var _default = _Panels["default"];
exports["default"] = _default;