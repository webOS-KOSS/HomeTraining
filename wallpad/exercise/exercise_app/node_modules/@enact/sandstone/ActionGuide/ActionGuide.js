"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ActionGuideDecorator = exports.ActionGuideBase = exports.ActionGuide = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _Pure = _interopRequireDefault(require("@enact/ui/internal/Pure"));

var _Touchable = _interopRequireDefault(require("@enact/ui/Touchable"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _compose = _interopRequireDefault(require("ramda/src/compose"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Marquee = require("../Marquee");

var _Skinnable = _interopRequireDefault(require("../Skinnable"));

var _ActionGuideModule = _interopRequireDefault(require("./ActionGuide.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["icon", "children", "css"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TouchableDiv = (0, _Touchable["default"])('div');
/**
 * An Action Guide component.
 *
 * This component is most often not used directly but may be composed within another component as it
 * is within [ActionGuide]{@link sandstone/ActionGuide.ActionGuide}.
 *
 * @class ActionGuideBase
 * @memberof sandstone/ActionGuide
 * @ui
 * @public
 */

var ActionGuideBase = (0, _kind["default"])({
  name: 'ActionGuide',
  propTypes:
  /** @lends sandstone/ActionGuide.ActionGuideBase.prototype */
  {
    /**
     * The contents for the action guide.
     *
     * @type {String}
     * @public
     */
    children: _propTypes["default"].string,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `actionGuide` - The root component class
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,

    /**
     * The icon displayed within the action guide.
     *
     * @type {String}
     * @default 'arrowsmalldown'
     * @public
     */
    icon: _propTypes["default"].string
  },
  defaultProps: {
    icon: 'arrowsmalldown'
  },
  styles: {
    css: _ActionGuideModule["default"],
    className: 'actionGuide',
    publicClassNames: ['actionGuide']
  },
  render: function render(_ref) {
    var icon = _ref.icon,
        children = _ref.children,
        css = _ref.css,
        rest = _objectWithoutProperties(_ref, _excluded);

    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(TouchableDiv, _objectSpread(_objectSpread({}, rest), {}, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon["default"], {
        size: "small",
        className: css.icon,
        children: icon
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, {
        className: css.label,
        marqueeOn: "render",
        alignment: "center",
        children: children
      })]
    }));
  }
});
/**
 * Applies Sandstone specific behaviors to [ActionGuide]{@link sandstone/ActionGuide.ActionGuideBase}.
 *
 * @hoc
 * @memberof sandstone/ActionGuide
 * @mixes sandstone/Skinnable.Skinnable
 * @public
 */

exports.ActionGuideBase = ActionGuideBase;
var ActionGuideDecorator = (0, _compose["default"])(_Pure["default"], _Skinnable["default"]);
/**
 * An Action Guide component, ready to use in Sandstone applications.
 *
 * `ActionGuide` may be used to display text and icon to describe an action.
 *
 * Usage:
 * ```
 * <ActionGuide icon="arrowlargedown">Hello</ActionGuide>
 * ```
 *
 * @class ActionGuide
 * @memberof sandstone/ActionGuide
 * @extends sandstone/ActionGuide.ActionGuideBase
 * @mixes sandstone/ActionGuide.ActionGuideDecorator
 * @ui
 * @public
 */

exports.ActionGuideDecorator = ActionGuideDecorator;
var ActionGuide = ActionGuideDecorator(ActionGuideBase);
exports.ActionGuide = ActionGuide;
var _default = ActionGuide;
exports["default"] = _default;