/*
// our convention is to use camelCase class name on the root node of the component. however, we do
// not have a way to set that class on ContextualPopupDecorator's root so we can't use it right now
// but keeping it around as a future note.
.contextualMenu {
	.applySkins({
		&.popup {
			// add theme styles
		}
	});
}
*/
.popup {
  max-height: 14.625rem;
  overflow: hidden;
  /*
	// in order to override the default ContextualPopupDecorator's container padding style, we
	// need to use an arbitrary additional CSS rule for precedence
	*/
}
.popup.container {
  min-width: 12.75rem;
  padding: 0.75rem 0;
}
.popup.container .innerContainer {
  max-height: 13.125rem;
}
.popup.container.small {
  width: 12.75rem;
}
.popup.container.large {
  width: 20rem;
}
.popup.container .item {
  margin-bottom: 0;
}
