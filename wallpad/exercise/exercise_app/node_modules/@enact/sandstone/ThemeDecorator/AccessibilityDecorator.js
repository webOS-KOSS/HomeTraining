"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.AccessibilityDecorator = void 0;

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _Registry = _interopRequireDefault(require("@enact/core/internal/Registry"));

var _Resizable = require("@enact/ui/Resizable");

var _util = require("@enact/ui/Skinnable/util");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = require("react");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["className", "highContrast", "skinVariants", "textSize"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * A higher-order component that classifies an application with a target set of font sizing rules.
 *
 * @class AccessibilityDecorator
 * @memberof sandstone/ThemeDecorator
 * @hoc
 * @public
 */
var AccessibilityDecorator = (0, _hoc["default"])(function (config, Wrapped) {
  var _class;

  return _class = /*#__PURE__*/function (_Component) {
    _inherits(_class, _Component);

    var _super = _createSuper(_class);

    function _class() {
      var _this;

      _classCallCheck(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      _this.resizeRegistry = _Registry["default"].create();
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.resizeRegistry.parent = this.context;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.textSize !== this.props.textSize) {
          this.resizeRegistry.notify({});
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.resizeRegistry.parent = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            className = _this$props.className,
            highContrast = _this$props.highContrast,
            skinVariants = _this$props.skinVariants,
            textSize = _this$props.textSize,
            props = _objectWithoutProperties(_this$props, _excluded);

        var accessibilityClassName = highContrast ? "enact-a11y-high-contrast enact-text-".concat(textSize) : "enact-text-".concat(textSize);
        var combinedClassName = className ? "".concat(className, " ").concat(accessibilityClassName) : accessibilityClassName;
        var variants = (0, _util.objectify)(skinVariants);
        if (highContrast) variants.highContrast = true;
        if (textSize === 'large') variants.largeText = true;
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Resizable.ResizeContext.Provider, {
          value: this.resizeRegistry.register,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({
            className: combinedClassName,
            skinVariants: variants
          }, props))
        });
      }
    }]);

    return _class;
  }(_react.Component), _class.contextType = _Resizable.ResizeContext, _class.displayName = 'AccessibilityDecorator', _class.propTypes =
  /** @lends sandstone/ThemeDecorator.AccessibilityDecorator.prototype */
  {
    /**
     * Enables additional features to help users visually differentiate components.
     *
     * The UI library will be responsible for using this information to adjust
     * the components' contrast to this preset.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    highContrast: _propTypes["default"].bool,

    /**
     * The variant(s) on a skin that a component should use when rendering. These will
     * typically alter the appearance of a skin's existing definition in a way that does not
     * override that skin's general styling.
     *
     * Multiple data types are supported by this prop, which afford different conveniences
     * and abilities. String and Array are effectively the same, supporting just additions
     * to the variants being applied to a component, and are much more convenient. Objects
     * may also be used, and have the ability to disable variants being passed by their
     * ancestors. Objects take the format of a basic hash, with variants as key names and
     * true/false Booleans as values, depicting their state. If a variant is excluded from
     * any version of data type used to set this prop, that variant will ignored, falling
     * back to the defaultVariant or parent variant, in that order.
     *
     * skinVariants examples:
     * ```
     *  // String
     *  skinVariants="highContrast"
     *
     *  // Array
     *  skinVariants={['highContrast']}
     *
     *  // Object
     *  skinVariants={{
     *  	highContrast: true,
     *  	grayscale: false
     *  }}
     * ```
     *
     * @type {String|String[]|Object}
     * @public
     */
    skinVariants: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].array, _propTypes["default"].object]),

    /**
     * Sets the goal size of the text.
     *
     * The UI library will be responsible for using this
     * information to adjust the components' text sizes to this preset.
     * Current presets are `'normal'` (default), and `'large'`.
     *
     * @type {('normal'|'large')}
     * @default 'normal'
     * @public
     */
    textSize: _propTypes["default"].oneOf(['normal', 'large'])
  }, _class.defaultProps = {
    highContrast: false,
    textSize: 'normal'
  }, _class;
});
exports.AccessibilityDecorator = AccessibilityDecorator;
var _default = AccessibilityDecorator;
exports["default"] = _default;