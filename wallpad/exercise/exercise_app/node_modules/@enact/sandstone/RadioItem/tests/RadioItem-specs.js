"use strict";

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _RadioItem = _interopRequireWildcard(require("../RadioItem"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

describe('RadioItem Specs', function () {
  test('should support a custom icon', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      icon: "check",
      selected: true,
      children: "Hello RadioItem"
    }));

    var radioItemElement = _react.screen.getByRole('checkbox');

    var expected = 'âœ“';
    var actual = radioItemElement.children.item(1).textContent;
    expect(actual).toBe(expected);
  });
  test('should render `children`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      children: "Hello RadioItem"
    }));

    var actual = _react.screen.getByText('Hello RadioItem');

    expect(actual).toBeInTheDocument();
  });
  test('should render a disabled RadioItem when `disabled` is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      disabled: true,
      children: "Hello RadioItem"
    }));

    var radioItem = _react.screen.getByRole('checkbox');

    expect(radioItem).toHaveAttribute('disabled');
  });
  test('should render a `slot before`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      slotBefore: "arrowup",
      children: "Hello RadioItem"
    }));

    var actual = _react.screen.getByText('arrowup');

    expect(actual).toBeInTheDocument();
  });
  test('should select RadioItem with click', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem["default"], {
      children: "Hello RadioItem"
    }));

    var radioItem = _react.screen.getAllByRole('checkbox');

    _react.fireEvent.click(radioItem[0]);

    var expected = 'selected';
    expect(radioItem[0]).toHaveClass(expected);
  });
  test('should not select RadioItem with click when disabled', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem["default"], {
      disabled: true,
      children: "Hello RadioItem"
    }));

    var radioItem = _react.screen.getAllByRole('checkbox');

    _react.fireEvent.click(radioItem[0]);

    var expected = 'selected';
    expect(radioItem[0]).not.toHaveClass(expected);
  });
});