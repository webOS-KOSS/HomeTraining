"use strict";

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _TooltipLabel = _interopRequireDefault(require("../TooltipLabel"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('TooltipDecorator', function () {
  describe('TooltipLabel', function () {
    test('should apply alignment when `centered` and `marquee`', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_TooltipLabel["default"], {
        centered: true,
        marquee: true,
        children: "Label"
      }));
      var expected = 'center';

      var tooltip = _react.screen.getByText('Label');

      expect(tooltip).toHaveStyle({
        'text-align': expected
      });
    });
    test('should not apply alignment when `centered` but not `marquee`', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_TooltipLabel["default"], {
        centered: true,
        children: "Label"
      }));
      var unexpected = 'center';

      var tooltip = _react.screen.getByText('Label');

      expect(tooltip).not.toHaveStyle({
        'text-align': unexpected
      });
    });
  });
});