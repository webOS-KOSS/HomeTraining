"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TooltipLabel = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _util = require("@enact/i18n/util");

var _resolution = require("@enact/ui/resolution");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Marquee = _interopRequireDefault(require("../Marquee"));

var _TooltipModule = _interopRequireDefault(require("./Tooltip.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["centered", "children", "marquee"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * {@link sandstone/TooltipDecorator.TooltipLabel} is a stateless tooltip component with
 * Sandstone styling applied.
 *
 * @class TooltipLabel
 * @memberof sandstone/TooltipDecorator
 * @ui
 * @private
 */
var TooltipLabel = (0, _kind["default"])({
  name: 'TooltipLabel',
  propTypes:
  /** @lends sandstone/TooltipDecorator.TooltipLabel.prototype */
  {
    /**
     * The node to be displayed as the main content of the tooltip.
     *
     * @type {Node}
     * @required
     */
    children: _propTypes["default"].node.isRequired,

    /**
     * Centers the text when `marquee` is also set.
     *
     * @type {Boolean}
     * @public
     */
    centered: _propTypes["default"].bool,

    /**
     * Apply a marquee to support long text.
     *
     * It is recommended that you specify a `width` also. If none is specified, a default width
     * of 600px will be used.
     *
     * @type {Boolean}
     * @public
     */
    marquee: _propTypes["default"].bool,

    /**
     * The width of tooltip content.
     *
     * Value expects a number of pixels, which will be automatically scaled to the appropriate
     * size given the current screen resolution, or a string value containing a measurement and
     * a valid CSS unit included.
     * If the content goes over the given width, it will automatically wrap, or marquee if
     * `marquee` is enabled.
     *
     * When `null`, content will auto-size and not wrap. If `marquee` is also enabled,
     * marqueeing will begin when the width is greater than the default (theme specified) width.
     *
     * @type {Number|String}
     * @public
     */
    width: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
  },
  styles: {
    css: _TooltipModule["default"]
  },
  computed: {
    className: function className(_ref) {
      var marquee = _ref.marquee,
          width = _ref.width,
          styler = _ref.styler;
      return styler.append({
        multi: !marquee && !!width,
        marquee: marquee
      });
    },
    style: function style(_ref2) {
      var children = _ref2.children,
          width = _ref2.width,
          _style = _ref2.style;
      return _objectSpread(_objectSpread({}, _style), {}, {
        direction: (0, _util.isRtlText)(children) ? 'rtl' : 'ltr',
        '--sand-tooltip-label-width': typeof width === 'number' ? (0, _resolution.scaleToRem)(width) : width
      });
    }
  },
  render: function render(_ref3) {
    var centered = _ref3.centered,
        children = _ref3.children,
        marquee = _ref3.marquee,
        rest = _objectWithoutProperties(_ref3, _excluded);

    delete rest.width;

    if (marquee) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee["default"], _objectSpread(_objectSpread({}, rest), {}, {
        alignment: centered ? 'center' : null,
        marqueeOn: "render",
        children: children
      }));
    } else {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread(_objectSpread({}, rest), {}, {
        children: children
      }));
    }
  }
});
exports.TooltipLabel = TooltipLabel;
var _default = TooltipLabel;
exports["default"] = _default;