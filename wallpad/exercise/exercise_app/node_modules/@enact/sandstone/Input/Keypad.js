"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _keymap = require("@enact/core/keymap");

var _handle = require("@enact/core/handle");

var _SpotlightContainerDecorator = require("@enact/spotlight/SpotlightContainerDecorator");

var _Layout = _interopRequireWildcard(require("@enact/ui/Layout"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("../Button"));

var _$L = _interopRequireDefault(require("../internal/$L"));

var _WindowEventable = _interopRequireDefault(require("../internal/WindowEventable"));

var _InputModule = _interopRequireDefault(require("./Input.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["children"],
    _excluded2 = ["disabled", "onAdd", "onRemove"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

(0, _keymap.add)('number', [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]); // Establish all number keys as 'number' keyword.

(0, _keymap.add)('backspace', 8);
var KEY_LIST = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'backspace'];
/*
 * A key used inside a Keypad Layout component.
 */

var Key = (0, _kind["default"])({
  name: 'Key',
  propTypes: {
    disabled: _propTypes["default"].bool,
    // Event callback fired when this button is clicked. Includes the 'key' key in its event
    // payload to let the clicker know what was clicked inside their callback.
    onKeyButtonClick: _propTypes["default"].func
  },
  styles: {
    css: _InputModule["default"],
    className: 'key'
  },
  handlers: {
    onClick: (0, _handle.handle)((0, _handle.forward)('onClick'), (0, _handle.adaptEvent)(function (ev, _ref) {
      var key = _ref.children;
      return {
        key: key
      };
    }, (0, _handle.forward)('onKeyButtonClick')))
  },
  render: function render(_ref2) {
    var children = _ref2.children,
        rest = _objectWithoutProperties(_ref2, _excluded);

    delete rest.onKeyButtonClick;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], _objectSpread(_objectSpread({}, rest), {}, {
      size: "large",
      icon: children
    }));
  }
});
var Keypad = (0, _kind["default"])({
  name: 'Keypad',
  propTypes: {
    disabled: _propTypes["default"].bool,
    onAdd: _propTypes["default"].func,
    onRemove: _propTypes["default"].func
  },
  styles: {
    css: _InputModule["default"],
    className: 'keypad'
  },
  render: function render(_ref3) {
    var disabled = _ref3.disabled,
        onAdd = _ref3.onAdd,
        onRemove = _ref3.onRemove,
        rest = _objectWithoutProperties(_ref3, _excluded2);

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Layout["default"], _objectSpread(_objectSpread({
      align: "center end",
      wrap: true
    }, rest), {}, {
      inline: true,
      children: KEY_LIST.map(function (keyText, rowIndex) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Layout.Cell, {
          className: rowIndex === 0 ? _SpotlightContainerDecorator.spotlightDefaultClass : null,
          "aria-label": keyText === 'backspace' ? (0, _$L["default"])('backspace') : keyText,
          shrink: true,
          component: Key,
          disabled: disabled,
          onKeyButtonClick: keyText === 'backspace' ? onRemove : onAdd,
          children: keyText
        }, "key".concat(rowIndex, "-").concat(keyText));
      })
    }));
  }
}); // Setup a keypress handler for window that monitors each of the number keys and the backspace key

var handleWindowKeyPress = (0, _handle.handle)((0, _handle.oneOf)([(0, _handle.forKey)('number'), (0, _handle.forward)('onAdd')], [(0, _handle.forKey)('backspace'), (0, _handle.forward)('onRemove')]));

var _default = (0, _WindowEventable["default"])({
  onKeyDown: handleWindowKeyPress
}, Keypad);

exports["default"] = _default;