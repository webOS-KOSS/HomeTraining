"use strict";

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _BodyText = _interopRequireDefault(require("../BodyText"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('BodyText Specs', function () {
  test('should support multi-line content', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BodyText["default"], {
      "data-testid": "bodyText"
    }));

    var bodyText = _react.screen.getByTestId('bodyText');

    var expected = 'P';
    var actual = bodyText.nodeName;
    expect(actual).toBe(expected);
  });
  test('should support single-line marqueeing content when `noWrap` is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BodyText["default"], {
      "data-testid": "bodyText",
      noWrap: true
    }));

    var bodyText = _react.screen.getByTestId('bodyText');

    var marquee = bodyText.children.item(0);
    var expected = 'marquee';
    expect(marquee).toHaveClass(expected);
  });
  test('should include the noWrap class if `noWrap` is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BodyText["default"], {
      "data-testid": "bodyText",
      noWrap: true
    }));

    var bodyText = _react.screen.getByTestId('bodyText');

    var expected = 'noWrap';
    expect(bodyText).toHaveClass(expected);
  });
  test('should have small class if `size` is small', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BodyText["default"], {
      "data-testid": "bodyText",
      size: "small"
    }));

    var bodyText = _react.screen.getByTestId('bodyText');

    var expected = 'small';
    expect(bodyText).toHaveClass(expected);
  });
  test('should have `centered` class if `centered` is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BodyText["default"], {
      "data-testid": "bodyText",
      centered: true
    }));

    var bodyText = _react.screen.getByTestId('bodyText');

    var expected = 'centered';
    expect(bodyText).toHaveClass(expected);
  });
});