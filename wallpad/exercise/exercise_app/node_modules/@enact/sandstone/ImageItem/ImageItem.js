"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ImageItemDecorator = exports.ImageItemBase = exports.ImageItem = void 0;

var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _Spottable = _interopRequireDefault(require("@enact/spotlight/Spottable"));

var _ImageItem = require("@enact/ui/ImageItem");

var _Layout = require("@enact/ui/Layout");

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _compose = _interopRequireDefault(require("ramda/src/compose"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Image = _interopRequireDefault(require("../Image"));

var _Marquee = require("../Marquee");

var _Skinnable = _interopRequireDefault(require("../Skinnable"));

var _AsyncRenderChildren = _interopRequireDefault(require("./AsyncRenderChildren"));

var _ImageItemModule = _interopRequireDefault(require("./ImageItem.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["css", "disabled", "selectionComponent", "showSelection"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultPlaceholder = 'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' + '9zdmciPjxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzU1NSIgZmlsbD0iI2FhYSIg' + 'ZmlsbC1vcGFjaXR5PSIwLjIiIHN0cm9rZS1vcGFjaXR5PSIwLjgiIHN0cm9rZS13aWR0aD0iNiIgLz48L3N2Zz' + '4NCg==';
/**
 * A Sandstone styled base component for [ImageItem]{@link sandstone/ImageItem.ImageItem}.
 *
 * @class ImageItemBase
 * @extends ui/ImageItem.ImageItem
 * @memberof sandstone/ImageItem
 * @ui
 * @public
 */

var ImageItemBase = (0, _kind["default"])({
  name: 'ImageItem',
  propTypes:
  /** @lends sandstone/ImageItem.ImageItemBase.prototype */
  {
    /**
     * Centers the primary caption and label in vertical orientation.
     *
     * @type {Boolean}
     * @public
     */
    centered: _propTypes2["default"].bool,

    /**
     * The primary caption displayed with the image.
     *
     * @type {String}
     * @public
     */
    children: _propTypes2["default"].string,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `caption` - The caption component class
     * * `fullImage` - Applied when `orientation` prop is `vertical` without `label` and `children`
     * * `horizontal` - Applied when `orientation` prop is `horizontal`
     * * `image` - The image component class
     * * `imageIcon` - The image icon component class
     * * `imageItem` - The image item component class
     * * `label` - The secondary caption component class
     * * `selected` - Applied when `selected` prop is `true`
     * * `selectionIcon` - The icon component class for default selection component
     * * `vertical` - Applied when `orientation` prop is `vertical`
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object,

    /**
     * Used internally to render `children` asynchronously.
     *
     * @type {Number}
     * @private
     */
    'data-index': _propTypes2["default"].number,

    /**
     * The voice control intent.
     *
     * @type {String}
     * @default 'Select'
     * @memberof sandstone/ImageItem.ImageItemBase.prototype
     * @public
     */
    'data-webos-voice-intent': _propTypes2["default"].string,

    /**
     * Disable ImageItem and becomes non-interactive.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes2["default"].bool,

    /**
     * The component used to render the image icon component.
     *
     * @type {Component}
     * @default sandstone/Image.Image
     * @private
     */
    imageIconComponent: _propTypes["default"].component,

    /**
     * Source for the image icon.
     *
     * String value or Object of values used to determine which image will appear on
     * a specific screenSize. This feature is only valid when `orientation` is `'vertical'`.
     *
     * @type {String|Object}
     * @private
     */
    imageIconSrc: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].object]),

    /**
     * A secondary caption displayed with the image.
     *
     * @type {String}
     * @public
     */
    label: _propTypes2["default"].string,

    /**
     * The layout orientation of the component.
     *
     * @type {('horizontal'|'vertical')}
     * @default 'vertical'
     * @public
     */
    orientation: _propTypes2["default"].oneOf(['horizontal', 'vertical']),

    /**
     * Placeholder image used while [src]{@link sandstone/ImageItem.ImageItem#src}
     * is loaded.
     *
     * @type {String}
     * @default 'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' +
     * '9zdmciPjxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzU1NSIgZmlsbD0iI2FhYSIg' +
     * 'ZmlsbC1vcGFjaXR5PSIwLjIiIHN0cm9rZS1vcGFjaXR5PSIwLjgiIHN0cm9rZS13aWR0aD0iNiIgLz48L3N2Zz' +
     * '4NCg=='
     * @public
     */
    placeholder: _propTypes2["default"].string,

    /**
     * Applies a selected visual effect to the image, but only if `showSelection`
     * is also `true`.
     *
     * @type {Boolean}
     * @public
     */
    selected: _propTypes2["default"].bool,

    /**
     * The custom selection component to render. A component can be a stateless functional
     * component, `kind()` or React component. The following is an example with custom selection
     * kind.
     *
     * Usage:
     * ```
     * const SelectionComponent = kind({
     * 	render: () => <div>custom selection component</div>
     * });
     *
     * <ImageItem selectionComponent={SelectionComponent} />
     * ```
     *
     * @type {Function}
     * @public
     */
    selectionComponent: _propTypes2["default"].func,

    /**
     * Shows a selection component with a centered icon. When `selected` is true, a check mark is shown.
     *
     * @type {Boolean}
     * @public
     */
    showSelection: _propTypes2["default"].bool,

    /**
     * Source for the image.
     * String value or Object of values used to determine which image will appear on
     * a specific screenSize.
     *
     * @type {String|Object}
     * @public
     */
    src: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].object])
  },
  defaultProps: {
    'data-webos-voice-intent': 'Select',
    imageIconComponent: _Image["default"],
    orientation: 'vertical',
    placeholder: defaultPlaceholder
  },
  styles: {
    css: _ImageItemModule["default"],
    publicClassNames: ['imageItem', 'caption', 'fullImage', 'horizontal', 'image', 'imageIcon', 'label', 'selected', 'selectionIcon', 'vertical']
  },
  computed: {
    children: function children(_ref) {
      var centered = _ref.centered,
          _children = _ref.children,
          css = _ref.css,
          index = _ref['data-index'],
          imageIconComponent = _ref.imageIconComponent,
          imageIconSrc = _ref.imageIconSrc,
          label = _ref.label,
          orientation = _ref.orientation;
      var hasImageIcon = imageIconSrc && orientation === 'vertical';
      if (!hasImageIcon && !_children && !label) return;
      var alignment = orientation === 'vertical' && centered ? {
        alignment: 'center'
      } : null;
      var captions = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Layout.Row, {
        className: css.captions,
        children: [hasImageIcon ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Layout.Cell, {
          className: css.imageIcon,
          component: imageIconComponent,
          shrink: true,
          src: imageIconSrc
        }) : null, /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Layout.Cell, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, _objectSpread(_objectSpread({}, alignment), {}, {
            className: css.caption,
            marqueeOn: "hover",
            children: _children
          })), typeof label !== 'undefined' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, _objectSpread(_objectSpread({}, alignment), {}, {
            className: css.label,
            marqueeOn: "hover",
            children: label
          })) : null]
        })]
      });
      return typeof index !== 'undefined' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_AsyncRenderChildren["default"], {
        fallback: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: css.placeholderCaption
          }), typeof label !== 'undefined' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: css.placeholderLabel
          }) : null]
        }),
        index: index,
        children: captions
      }) : captions;
    },
    className: function className(_ref2) {
      var children = _ref2.children,
          imageIconSrc = _ref2.imageIconSrc,
          label = _ref2.label,
          orientation = _ref2.orientation,
          styler = _ref2.styler;
      return styler.append({
        fullImage: orientation === 'vertical' && !children && !label && !imageIconSrc
      });
    }
  },
  render: function render(_ref3) {
    var css = _ref3.css,
        disabled = _ref3.disabled,
        SelectionComponent = _ref3.selectionComponent,
        showSelection = _ref3.showSelection,
        rest = _objectWithoutProperties(_ref3, _excluded);

    delete rest.centered;
    delete rest.imageIconComponent;
    delete rest.imageIconSrc;
    delete rest.label;

    if (showSelection) {
      rest['role'] = 'checkbox';
      rest['aria-checked'] = rest.selected;
    }

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItem, _objectSpread(_objectSpread({}, rest), {}, {
      "aria-disabled": disabled,
      css: css,
      disabled: disabled,
      imageComponent: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image["default"], {
        children: showSelection ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: css.selectionContainer,
          children: SelectionComponent ? /*#__PURE__*/(0, _jsxRuntime.jsx)(SelectionComponent, {}) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon["default"], {
            className: css.selectionIcon,
            children: "check"
          })
        }) : null
      })
    }));
  }
});
/**
 * Sandstone-specific ImageItem behaviors to apply to
 * [ImageItem]{@link sandstone/ImageItem.ImageItem}.
 *
 * @hoc
 * @memberof sandstone/ImageItem
 * @mixes sandstone/Marquee.MarqueeController
 * @mixes spotlight/Spottable.Spottable
 * @mixes sandstone/Skinnable.Skinnable
 * @public
 */

exports.ImageItemBase = ImageItemBase;
var ImageItemDecorator = (0, _compose["default"])((0, _Marquee.MarqueeController)({
  marqueeOnFocus: true
}), _Spottable["default"], _Skinnable["default"]);
/**
 * A sandstone-styled image item, Marquee and Spottable applied.
 *
 * Usage:
 * ```
 * <ImageItem
 *   src="http://via.placeholder.com/100x100/9037ab/ffffff/png?text=Image0"
 *   label="A secondary caption"
 * >
 * 	The primary caption for the image
 * </ImageItem>
 * ```
 *
 * @class ImageItem
 * @memberof sandstone/ImageItem
 * @extends sandstone/ImageItem.ImageItemBase
 * @mixes sandstone/ImageItem.ImageItemDecorator
 * @see {@link sandstone/ImageItem.ImageItemBase}
 * @ui
 * @public
 */

exports.ImageItemDecorator = ImageItemDecorator;
var ImageItem = ImageItemDecorator(ImageItemBase);
exports.ImageItem = ImageItem;
ImageItem.displayName = 'ImageItem';
var _default = ImageItem;
exports["default"] = _default;