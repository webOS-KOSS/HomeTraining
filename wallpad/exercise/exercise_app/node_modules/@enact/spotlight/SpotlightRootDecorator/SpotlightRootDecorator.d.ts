// Type definitions for spotlight/SpotlightRootDecorator

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

export interface SpotlightRootDecoratorConfig extends Object {
  /**
   * When  `true` , the contents of the component will not receive spotlight focus after being rendered.
   */
  noAutoFocus?: boolean;
}
export interface SpotlightRootDecoratorProps {}
export function SpotlightRootDecorator<P>(
  config: SpotlightRootDecoratorConfig,
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpotlightRootDecoratorProps>;

export function SpotlightRootDecorator<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpotlightRootDecoratorProps>;

export default SpotlightRootDecorator;
