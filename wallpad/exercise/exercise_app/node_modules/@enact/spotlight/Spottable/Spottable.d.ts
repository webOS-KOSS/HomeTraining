// Type definitions for spotlight/Spottable

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

/**
 * The class name for spottable components. In general, you do not need to directly access this class
 */
export declare const spottableClass: string;
export interface SpottableConfig extends Object {
  /**
 * Whether or not the component should emulate mouse events as a response
to Spotlight 5-way events.
 */
  emulateMouse?: boolean;
}
export interface SpottableProps {
  /**
   * Whether or not the component is in a disabled state.
   */
  disabled?: boolean;
  /**
   * The handler to force update the component.
   */
  handleForceUpdate?: Function;
  /**
   * The handler to run when the component is removed while retaining focus.
   */
  onSpotlightDisappear?: Function;
  /**
   * The handler to run when the 5-way down key is pressed.
   */
  onSpotlightDown?: Function;
  /**
   * The handler to run when the 5-way left key is pressed.
   */
  onSpotlightLeft?: Function;
  /**
   * The handler to run when the 5-way right key is pressed.
   */
  onSpotlightRight?: Function;
  /**
   * The handler to run when the 5-way up key is pressed.
   */
  onSpotlightUp?: Function;
  /**
 * An array of numbers representing keyCodes that should trigger mouse event
emulation when  `emulateMouse`  is  `true` . If a keyCode equals a directional
key, then default 5-way navigation will be prevented when that key is pressed.
 */
  selectionKeys?: number[];
  /**
   * When  `true` , the component cannot be navigated using spotlight.
   */
  spotlightDisabled?: boolean;
  /**
   * Used to identify this component within the Spotlight system
   */
  spotlightId?: string;
  /**
 * The tabIndex of the component. This value will default to -1 if left
unset and the control is spottable.
 */
  tabIndex?: number;
}
export function Spottable<P>(
  config: SpottableConfig,
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpottableProps>;

export function Spottable<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpottableProps>;

export default Spottable;
