"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ScrollThumbBase = exports.ScrollThumb = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ScrollThumbModule = _interopRequireDefault(require("./ScrollThumb.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * An unstyled scroll thumb without any behavior.
 *
 * @class ScrollThumb
 * @memberof ui/Scrollable
 * @ui
 * @private
 */
var ScrollThumb = (0, _kind["default"])({
  name: 'ui:ScrollThumb',
  propTypes:
  /** @lends ui/Scrollable.ScrollThumb.prototype */
  {
    /**
     * If `true`, the scrollbar will be oriented vertically.
     *
     * @type {Boolean}
     * @default true
     * @public
     */
    vertical: _propTypes["default"].bool
  },
  defaultProps: {
    vertical: true
  },
  styles: {
    css: _ScrollThumbModule["default"],
    className: 'scrollThumb'
  },
  computed: {
    className: function className(_ref) {
      var vertical = _ref.vertical,
          styler = _ref.styler;
      return styler.append({
        vertical: vertical
      });
    }
  },
  render: function render(props) {
    delete props.vertical;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, props));
  }
});
exports.ScrollThumbBase = exports.ScrollThumb = ScrollThumb;
var _default = ScrollThumb;
exports["default"] = _default;