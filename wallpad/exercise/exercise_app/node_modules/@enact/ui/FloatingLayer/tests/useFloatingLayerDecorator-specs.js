"use strict";

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _FloatingLayer = require("../FloatingLayer");

var _FloatingLayerDecorator = require("../FloatingLayerDecorator");

var _jsxRuntime = require("react/jsx-runtime");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

describe('FloatingLayer Specs', function () {
  function Root(props) {
    var hook = (0, _FloatingLayerDecorator.useFloatingLayerDecorator)();
    return hook.provideFloatingLayer( /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, props), "floatWrapped"));
  }

  test('should not render if FloatingLayer is not open', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Root, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingLayer.FloatingLayerBase, {
        "data-testid": "floatingLayer",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          children: "Hi"
        })
      })
    }));

    var floatingLayerContainer = _react.screen.queryByTestId('floatingLayer');

    expect(floatingLayerContainer).not.toBeInTheDocument();
  });
  test('should render if FloatingLayer is open', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Root, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingLayer.FloatingLayerBase, {
        "data-testid": "floatingLayer",
        open: true,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          children: "Hi"
        })
      })
    }));

    var floatingLayerContainer = _react.screen.getByTestId('floatingLayer');

    expect(floatingLayerContainer).toBeInTheDocument();
  });
});