"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.HeadingDecorator = exports.HeadingBase = exports.Heading = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _compose = _interopRequireDefault(require("ramda/src/compose"));

var _ForwardRef = _interopRequireDefault(require("../ForwardRef"));

var _HeadingModule = _interopRequireDefault(require("./Heading.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["Tag", "componentRef"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * A labeled Heading component.
 *
 * @class HeadingBase
 * @memberof ui/Heading
 * @ui
 * @public
 */
var HeadingBase = (0, _kind["default"])({
  name: 'ui:Heading',
  propTypes:
  /** @lends ui/Heading.Heading.prototype */
  {
    /**
     * The text for the label of the Heading.
     *
     * @type {Node}
     * @public
     */
    children: _propTypes2["default"].node,

    /**
     * Called with a reference to the root component.
     *
     * When using {@link ui/Heading.Heading}, the `ref` prop is forwarded to this component
     * as `componentRef`.
     *
     * @type {Object|Function}
     * @public
     */
    componentRef: _propTypes["default"].ref,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `heading` - The root component class
     * * `title` - Applied when `size` is set to "title"
     * * `subtitle` - Applied when `size` is set to "subtitle"
     * * `large` - Applied when `size` is set to "large"
     * * `medium` - Applied when `size` is set to "medium"
     * * `small` - Applied when `size` is set to "small"
     * * `tiny` - Applied when `size` is set to "tiny"
     * * `largeSpacing` - Applied when `spacing` is set to "large"
     * * `mediumSpacing` - Applied when `spacing` is set to "medium"
     * * `smallSpacing` - Applied when `spacing` is set to "small"
     * * `noneSpacing` - Applied when `spacing` is set to "none"
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object,

    /**
     * Set the size of this component.
     *
     * * `'title'` and `'subtitle'` are generally considered to be used only once on a given screen.
     * * `'large'`, `'medium'`, `'small'`, and `'tiny'` are typically used as section headings
     * for content on a screen, starting with `'large'` for the first tier of information
     * followed by `'medium'` for the next, and so fourth.
     *
     * If the `spacing` prop is not set (defaulting to "auto"), these values automatically set
     * the spacing to the correlated names.
     *
     * @type {('title'|'subtitle'|'large'|'medium'|'small'|'tiny')}
     * @public
     */
    size: _propTypes2["default"].oneOf(['title', 'subtitle', 'large', 'medium', 'small', 'tiny']),

    /**
     * The size of the spacing around the Heading.
     *
     * These have no built-in measurements, as they are intended to be defined by the theme
     * consuming this UI element. The values correlate with customizable classes made available
     * by this component's `css` prop.
     *
     * Allowed values include:
     * * `'auto'` (default) - Lets this value be based on the `size` prop for automatic usage.
     * * `'large'` - Specifically assign the `'large'` spacing.
     * * `'medium'` - Specifically assign the `'medium'` spacing.
     * * `'small'` - Specifically assign the `'small'` spacing.
     * * `'none'` - No spacing at all. Neighboring elements will directly touch the Heading.
     *
     * @type {('auto'|'large'|'medium'|'small'|'none')}
     * @default 'auto'
     * @public
     */
    spacing: _propTypes2["default"].oneOf(['auto', 'large', 'medium', 'small', 'none'])
  },
  defaultProps: {
    size: 'medium',
    spacing: 'auto'
  },
  styles: {
    css: _HeadingModule["default"],
    className: 'heading',
    publicClassNames: true
  },
  computed: {
    // This logic is intended to have the following result:
    // Apply a class for the current 'size'. Use the 'size' to determine the spacing, unless a
    // "non-auto" spacing value was specified.
    className: function className(_ref) {
      var size = _ref.size,
          spacing = _ref.spacing,
          styler = _ref.styler;
      return styler.append(size, _defineProperty({}, (spacing !== 'auto' ? spacing : size || 'none') + 'Spacing', true));
    },
    Tag: function Tag(_ref2) {
      var size = _ref2.size;

      switch (size) {
        case 'title':
          return 'h1';

        case 'subtitle':
          return 'h2';

        case 'large':
          return 'h3';

        case 'medium':
          return 'h4';

        case 'small':
          return 'h5';

        case 'tiny':
          return 'h6';
      }
    }
  },
  render: function render(_ref3) {
    var Tag = _ref3.Tag,
        componentRef = _ref3.componentRef,
        rest = _objectWithoutProperties(_ref3, _excluded);

    delete rest.size;
    delete rest.spacing;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Tag, _objectSpread(_objectSpread({}, rest), {}, {
      ref: componentRef
    }));
  }
});
/**
 * A higher-order component that adds behavior to [Heading]{@link ui/Heading.HeadingBase}.
 *
 * @hoc
 * @memberof ui/Heading
 * @mixes ui/ForwardRef.ForwardRef
 * @public
 */

exports.HeadingBase = HeadingBase;
var HeadingDecorator = (0, _compose["default"])((0, _ForwardRef["default"])({
  prop: 'componentRef'
}));
/**
 * A labeled Heading component.
 *
 * @class Heading
 * @memberof ui/Heading
 * @extends ui/Heading.HeadingBase
 * @mixes ui/Heading.HeadingDecorator
 * @omit componentRef
 * @ui
 * @public
 */

exports.HeadingDecorator = HeadingDecorator;
var Heading = HeadingDecorator(HeadingBase);
exports.Heading = Heading;
var _default = Heading;
exports["default"] = _default;