"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Announce", {
  enumerable: true,
  get: function get() {
    return _Announce["default"];
  }
});
exports["default"] = exports.AnnounceDecorator = void 0;
Object.defineProperty(exports, "useAnnounce", {
  enumerable: true,
  get: function get() {
    return _useAnnounce["default"];
  }
});

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Announce = _interopRequireDefault(require("./Announce"));

var _useAnnounce = _interopRequireDefault(require("./useAnnounce"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["children"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Default config for {@link ui/AnnounceDecorator.AnnounceDecorator}.
 *
 * @memberof ui/AnnounceDecorator.AnnounceDecorator
 * @hocconfig
 * @private
 */
var defaultConfig = {
  /**
   * Configures the prop name to pass the announce function.
   *
   * @type {String}
   * @default 'announce'
   * @memberof ui/AnnounceDecorator.AnnounceDecorator.defaultConfig
   */
  prop: 'announce'
};
/**
 * A higher-order component that provides a function to its wrapped component which can be
 * called to alert the user for accessibility notifications.
 *
 * By default, the function is passed in the `announce` prop but may be customized by specifying the
 * `prop` config member. In addition to the configured prop, this HoC also adds an additional child
 * component to the passed `children` prop.
 *
 * Example:
 * ```
 * import AnnounceDecorator from '@enact/ui/AnnounceDecorator';
 * import {Component} from 'react';
 *
 * const Example = AnnounceDecorator(class extends Component {
 *   static propTypes = {
 *     // passed by AnnounceDecorator
 *     announce: PropTypes.func
 *   }
 *
 *   notify = () => {
 *     const {announce} = this.props;
 *     announce('this text will be alerted to user by TTS');
 *   }
 *
 *   render () {
 *     <div>
 *       <button onClick={this.notify}>Notify on Click</button>
 *     </div>
 *   }
 * });
 * ```
 *
 * @class AnnounceDecorator
 * @memberof ui/AnnounceDecorator
 * @hoc
 * @public
 */

var AnnounceDecorator = (0, _hoc["default"])(defaultConfig, function (_ref, Wrapped) {
  var prop = _ref.prop;

  // eslint-disable-next-line no-shadow
  function AnnounceDecorator(_ref2) {
    var children = _ref2.children,
        rest = _objectWithoutProperties(_ref2, _excluded);

    var announce = (0, _useAnnounce["default"])();
    if (prop) rest[prop] = announce.announce;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(Wrapped, _objectSpread(_objectSpread({}, rest), {}, {
      children: [children, announce.children]
    }));
  }

  AnnounceDecorator.propTypes =
  /** @lends ui/AnnounceDecorator.AnnounceDecorator.prototype */
  {
    /**
     * The wrapped component's children.
     *
     * An instance of {@link ui/AnnounceDecorator.Announce} will be appended to `children`.
     *
     * @type {Node}
     * @public
     */
    children: _propTypes["default"].node
  };
  return AnnounceDecorator;
});
exports.AnnounceDecorator = AnnounceDecorator;
var _default = AnnounceDecorator;
exports["default"] = _default;