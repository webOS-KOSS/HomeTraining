"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.IdProvider = void 0;
Object.defineProperty(exports, "useId", {
  enumerable: true,
  get: function get() {
    return _useId2["default"];
  }
});

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _useId2 = _interopRequireDefault(require("./useId"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Default config for {@link ui/IdProvider.IdProvider}
 *
 * @hocconfig
 * @memberof ui/IdProvider.IdProvider
 */
var defaultConfig = {
  /**
   * Prop to pass the identifier generation function
   *
   * @type {String}
   * @default generateId
   * @memberof ui/IdProvider.IdProvider.defaultConfig
   */
  generateProp: 'generateId',

  /**
   * Prop to pass the identifier
   *
   * @type {String}
   * @default id
   * @memberof ui/IdProvider.IdProvider.defaultConfig
   */
  idProp: 'id',

  /**
   * Optional prefix for the identifier
   *
   * @type {String}
   * @default 'c_'
   * @memberof ui/IdProvider.IdProvider.defaultConfig
   */
  prefix: 'c_'
};
/**
 * A higher-order component that generates globally-unique identifiers
 *
 * @class IdProvider
 * @hoc
 * @private
 * @memberof ui/IdProvider
 */

var IdProvider = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var generateProp = config.generateProp,
      idProp = config.idProp,
      prefix = config.prefix; // eslint-disable-next-line no-shadow

  function IdProvider(props) {
    var updated = _objectSpread({}, props);

    var _useId = (0, _useId2["default"])({
      prefix: prefix
    }),
        generateId = _useId.generateId;

    if (generateProp) {
      updated[generateProp] = generateId;
    }

    if (idProp && !updated[idProp]) {
      updated[idProp] = generateId();
    }

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, updated));
  }

  return IdProvider;
});
exports.IdProvider = IdProvider;
var _default = IdProvider;
exports["default"] = _default;