"use strict";

var _react = require("react");

var _react2 = require("@testing-library/react");

var _IconButton = _interopRequireDefault(require("../IconButton"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('IconButton', function () {
  var Button = /*#__PURE__*/(0, _react.forwardRef)(function (props, fn) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      ref: fn
    });
  });

  function Icon() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {});
  }

  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_IconButton["default"], {
      ref: ref,
      buttonComponent: Button,
      iconComponent: Icon,
      children: "star"
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
});