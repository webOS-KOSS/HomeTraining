"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Link", {
  enumerable: true,
  get: function get() {
    return _Link.Link;
  }
});
Object.defineProperty(exports, "Linkable", {
  enumerable: true,
  get: function get() {
    return _Link.Linkable;
  }
});
exports.Routable = void 0;
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function get() {
    return _Route["default"];
  }
});
Object.defineProperty(exports, "RouteContext", {
  enumerable: true,
  get: function get() {
    return _util.RouteContext;
  }
});
exports["default"] = void 0;

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _invariant = _interopRequireDefault(require("invariant"));

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _warning = _interopRequireDefault(require("warning"));

var _Link = require("./Link");

var _Route = _interopRequireDefault(require("./Route"));

var _Router = _interopRequireDefault(require("./Router"));

var _util = require("./util");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["index"],
    _excluded2 = ["children", "handleNavigate", "index", "path"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Default config for [`Routable`]{@link ui/Routable.Routable}.
 *
 * @memberof ui/Routable.Routable
 * @hocconfig
 */
var defaultConfig = {
  /**
   * The event to listen to for path changes.
   *
   * This defines the actual name of the [navigate]{@link ui/Routable.Routable#navigate}
   * property.
   *
   * @type {String}
   * @required
   * @memberof ui/Routable.Routable.defaultConfig
   */
  navigate: null
};
/**
 * A higher-order component that provides support for mapping Routes as children of a component
 * which are selected via `path` instead of the usual flat array.
 *
 * When using `Routable` you must specify the `navigate` config option.
 *
 * @class Routable
 * @memberof ui/Routable
 * @hoc
 * @public
 */

var Routable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var navigate = config.navigate;
  !navigate ? process.env.NODE_ENV !== "production" ? (0, _invariant["default"])(false, 'navigate must be specified with Routable') : (0, _invariant["default"])(false) : void 0;
  return (0, _kind["default"])({
    name: 'Routable',
    propTypes:
    /** @lends ui/Routable.Routable.prototype */
    _defineProperty({
      /**
       * Path to the active panel.
       *
       * May either be a URI-style path (`'/app/home/settings'`) or an array
       * of strings (`['app', 'home', 'settings']`).
       *
       * @type {String|String[]}
       * @required
       * @public
       */
      path: _util.propTypes.path.isRequired
    }, navigate, _propTypes2["default"].func),
    handlers: _defineProperty({
      handleNavigate: function handleNavigate(_ref, _ref2) {
        var path = _ref.path;
        var currentPath = _ref2.path,
            handler = _ref2[navigate];
        path = (0, _util.resolve)(currentPath, path);
        process.env.NODE_ENV !== "production" ? (0, _warning["default"])(path, "Path \"".concat(path, "\" was invalid from current path \"").concat(currentPath, "\"")) : void 0;
        if (path) handler({
          path: path
        });
      }
    }, navigate, function (_ref3, _ref4) {
      var index = _ref3.index,
          rest = _objectWithoutProperties(_ref3, _excluded);

      var path = _ref4.path,
          handler = _ref4[navigate];

      if (handler) {
        var p = (0, _util.toSegments)(path).slice(0, index + 1);
        handler(_objectSpread(_objectSpread({}, rest), {}, {
          index: index,
          path: Array.isArray(path) ? p : '/' + p.join('/')
        }));
      }
    }),
    computed: {
      // Determines the `index` as 1 less than the number of segments in the path
      index: function index(_ref5) {
        var path = _ref5.path;
        return (0, _util.toSegments)(path).length - 1;
      }
    },
    render: function render(_ref6) {
      var children = _ref6.children,
          handleNavigate = _ref6.handleNavigate,
          index = _ref6.index,
          path = _ref6.path,
          rest = _objectWithoutProperties(_ref6, _excluded2);

      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_util.RouteContext.Provider, {
        value: {
          navigate: handleNavigate,
          path: path
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Router["default"], _objectSpread(_objectSpread({}, rest), {}, {
          path: path,
          component: Wrapped,
          index: index,
          children: children
        }))
      });
    }
  });
});
exports.Routable = Routable;
var _default = Routable;
exports["default"] = _default;