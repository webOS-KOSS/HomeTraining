"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RouterBase = exports.Router = void 0;

var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _react = require("react");

var _warning = _interopRequireDefault(require("warning"));

var _ForwardRef = _interopRequireDefault(require("../ForwardRef"));

var _util = require("./util");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["path", "children", "component"],
    _excluded2 = ["component", "componentRef"];

var _class;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * A Router component for use with [`ViewManager`]{@link ui/ViewManager.ViewManager}
 *
 * @class Router
 * @memberof ui/Routable
 * @mixes ui/ForwardRef.ForwardRef
 * @ui
 * @private
 */
var RouterBase = (_class = /*#__PURE__*/function (_ReactComponent) {
  _inherits(RouterBase, _ReactComponent);

  var _super = _createSuper(RouterBase);

  function RouterBase(props) {
    _classCallCheck(this, RouterBase);

    return _super.call(this, props);
  }
  /**
   * Generates a set of routes from `children` and appends them to `routes`.
   *
   * @param  {React.element[]} children Array of children
   * @param  {Object}          routes   Route configuration object
   *
   * @returns {Object}                   Route configuration object
   */


  _createClass(RouterBase, [{
    key: "createRoutes",
    value: function createRoutes(children, routes) {
      var _this = this;

      _react.Children.forEach(children, function (child) {
        var _child$props = child.props,
            path = _child$props.path,
            grandchildren = _child$props.children,
            component = _child$props.component,
            rest = _objectWithoutProperties(_child$props, _excluded);

        if (path && component) {
          routes[path] = {
            $component: component,
            $props: rest
          };

          if (grandchildren) {
            _this.createRoutes(grandchildren, routes[path]);
          }
        }
      });

      return routes;
    }
    /**
     * Creates an array of React.elements for the current path.
     *
     * @returns {React.element[]} Children to render
     */

  }, {
    key: "createChildren",
    value: function createChildren() {
      var segments = (0, _util.toSegments)(this.props.path);
      var _this$props = this.props,
          routes = _this$props.routes,
          children = _this$props.children;
      var computedRoutes = routes || this.createRoutes(children, {});
      var valid = true;
      var route = computedRoutes;
      var childrenElements = segments.map(function (segment, index) {
        var subPath = segments.slice(0, index + 1).join('/');
        route = route && route[segment];

        if (route && route.$component) {
          return /*#__PURE__*/(0, _react.createElement)(route.$component, _objectSpread(_objectSpread({}, route.$props), {}, {
            key: 'view$/' + subPath,
            spotlightId: "panel-".concat(subPath.replace(/\//g, '-'))
          }));
        }

        valid = false;
        return null;
      });
      process.env.NODE_ENV !== "production" ? (0, _warning["default"])(valid, "".concat(this.props.path, " does not match the configured routes: ").concat((0, _util.stringifyRoutes)(computedRoutes))) : void 0;
      return valid ? childrenElements : [];
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          Component = _this$props2.component,
          componentRef = _this$props2.componentRef,
          rest = _objectWithoutProperties(_this$props2, _excluded2);

      var children = this.createChildren();
      delete rest.path;
      delete rest.routes;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, _objectSpread(_objectSpread({
        ref: componentRef
      }, rest), {}, {
        children: children
      }));
    }
  }]);

  return RouterBase;
}(_react.Component), _class.displayName = 'Router', _class.propTypes =
/** @lends ui/Routable.Router.prototype */
{
  /**
   * List of views to render.
   *
   * Will be rendered as a flat array of views suitable for use in
   * Panels and not a hierarchy of views as the path implies.
   *
   * May either be a URI-style path (`'/app/home/settings'`) or an array
   * of strings (`['app', 'home', 'settings']`).
   *
   * @type {String|String[]}
   * @required
   * @public
   */
  path: _util.propTypes.path.isRequired,

  /**
   * The component wrapping the rendered path.
   *
   * @type {String|Component}
   * @default 'div'
   * @public
   */
  component: _propTypes["default"].renderable,

  /**
   * Called with a reference to [component]{@link ui/Routable.Router#component}.
   *
   * @type {Object|Function}
   * @private
   */
  componentRef: _propTypes["default"].ref,

  /**
   * Routes defined as an object rather than via JSX.
   *
   * If specified, `routes` will take
   * precendence over a JSX definition.
   *
   * ```JavaScript
   * const routes = {
   *   'first': {
   *     '$props': {
   *       'title': 'About Routable Panels Pattern'
   *     },
   *     '$component': AboutPanel,
   *     'second': {
   *       '$props': {
   *         'next': 'fourth',
   *         'title': 'Second'
   *       },
   *       '$component': MainPanel
   *     },
   *     'third': {
   *       '$props': {
   *         'next': 'first',
   *         'title': 'Third'
   *       },
   *       '$component': MainPanel,
   *       'fourth': {
   *         '$props': {
   *           'next': 'third',
   *           'title': 'Fourth'
   *         },
   *         '$component': MainPanel
   *       }
   *     }
   *   }
   * };
   *
   *	<Panels path="/app/home/settings" routes={routes} />
   * ```
   *
   * @type {Object}
   * @public
   */
  routes: _propTypes2["default"].object
}, _class.defaultProps = {
  component: 'div'
}, _class);
exports.RouterBase = RouterBase;
var Router = (0, _ForwardRef["default"])({
  prop: 'componentRef'
}, RouterBase);
exports.Router = Router;
var _default = Router;
exports["default"] = _default;