"use strict";

require("@testing-library/jest-dom");

var _react = require("@testing-library/react");

var _Image = _interopRequireWildcard(require("../Image"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var src = {
  'hd': 'http://lorempixel.com/64/64/city/1/',
  'fhd': 'http://lorempixel.com/128/128/city/1/',
  'uhd': 'http://lorempixel.com/256/256/city/1/'
};
describe('Image Specs', function () {
  test('should only have image class without sizing', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "none",
      src: src
    }));
    var expected = 'image';

    var imageElement = _react.screen.getByTestId('image');

    expect(imageElement).toHaveClass(expected);
  });
  test('should have class for fill', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fill",
      src: src
    }));
    var expected = 'fill';

    var imageElement = _react.screen.getByTestId('image');

    expect(imageElement).toHaveClass(expected);
  });
  test('should have class for fit', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fit",
      src: src
    }));
    var expected = 'fit';

    var imageElement = _react.screen.getByTestId('image');

    expect(imageElement).toHaveClass(expected);
  });
  test('should set role to img by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fit",
      src: src
    }));
    var expected = 'img';

    var imageElement = _react.screen.getByTestId('image');

    expect(imageElement).toHaveAttribute('role', expected);
  });
  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image["default"], {
      ref: ref,
      src: src
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
});